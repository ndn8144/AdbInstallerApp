using AdbInstallerApp.Models;

namespace AdbInstallerApp.Services
{
    public class UsbDebugHelper
    {
        public static class DeviceStates
        {
            public const string Device = "device";
            public const string Unauthorized = "unauthorized"; 
            public const string Offline = "offline";
            public const string NoDevice = "no device";
        }
        
        public UsbDebugInfo AnalyzeDeviceState(DeviceInfo device)
        {
            return device.State switch
            {
                DeviceStates.Unauthorized => new UsbDebugInfo
                {
                    Status = UsbDebugStatus.NeedAuthorize,
                    Title = "‚ö†Ô∏è Ch∆∞a ƒë∆∞·ª£c ph√©p",
                    Message = "Thi·∫øt b·ªã ch∆∞a cho ph√©p USB Debugging",
                    Steps = GetUnauthorizedSteps()
                },
                DeviceStates.Offline => new UsbDebugInfo
                {
                    Status = UsbDebugStatus.Offline,
                    Title = "üîå M·∫•t k·∫øt n·ªëi", 
                    Message = "Thi·∫øt b·ªã offline ho·∫∑c driver c√≥ v·∫•n ƒë·ªÅ",
                    Steps = GetOfflineSteps()
                },
                DeviceStates.Device => new UsbDebugInfo
                {
                    Status = UsbDebugStatus.Ready,
                    Title = "‚úÖ S·∫µn s√†ng",
                    Message = "Thi·∫øt b·ªã ƒë√£ k·∫øt n·ªëi v√† s·∫µn s√†ng"
                },
                _ => new UsbDebugInfo { Status = UsbDebugStatus.Unknown }
            };
        }

        private List<string> GetUnauthorizedSteps()
        {
            return new List<string>
            {
                "1. Ki·ªÉm tra m√†n h√¨nh thi·∫øt b·ªã Android",
                "2. T√¨m th√¥ng b√°o 'Allow USB Debugging?'",
                "3. Ch·ªçn 'Allow' ho·∫∑c 'OK'",
                "4. N·∫øu c√≥, ch·ªçn 'Always allow from this computer'",
                "5. Ki·ªÉm tra l·∫°i tr·∫°ng th√°i thi·∫øt b·ªã"
            };
        }

        private List<string> GetOfflineSteps()
        {
            return new List<string>
            {
                "1. Ki·ªÉm tra c√°p USB v√† c·ªïng k·∫øt n·ªëi",
                "2. Th·ª≠ c√°p USB kh√°c ho·∫∑c c·ªïng kh√°c",
                "3. Ki·ªÉm tra driver USB tr√™n m√°y t√≠nh",
                "4. Th·ª≠ k·∫øt n·ªëi l·∫°i thi·∫øt b·ªã",
                "5. Kh·ªüi ƒë·ªông l·∫°i thi·∫øt b·ªã Android n·∫øu c·∫ßn"
            };
        }
    }
}
